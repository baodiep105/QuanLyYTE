@model QuanLyYTe.Models.TaiKhoan;
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["msgSuccess"] != null)
{
    @Html.Raw(TempData["msgSuccess"])
}
@if (TempData["msgError"] != null)
{
    @Html.Raw(TempData["msgError"])
}
<style>
    #frmCheckPassword {
        border-top: #F0F0F0 2px solid;
        background: #808080;
        padding: 10px;
    }

    .demoInputBox {
        padding: 7px;
        border: #F0F0F0 1px solid;
        border-radius: 4px;
    }

    #password-strength-status {
        padding: 5px 10px;
        color: #FFFFFF;
        border-radius: 4px;
        margin-top: 5px;
    }

    .medium-password {
        background-color: #b7d60a;
        border: #BBB418 1px solid;
    }

    .weak-password {
        background-color: #ce1d14;
        border: #AA4502 1px solid;
    }

    .strong-password {
        background-color: #12CC1A;
        border: #0FA015 1px solid;
    }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-5">
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <div class="card-header" style=" margin: auto;"><h4 class="text-center font-weight-light"><b>Thay đổi mật khẩu</b></h4></div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group" style="padding: 2%; margin-bottom: 0px;">
                            <label class="small mb-1" for="inputFirstName"><h6>Mật khẩu cũ</h6> </label>
                            @Html.EditorFor(model => model.MatKhauCu, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Nhập mật khẩu cũ" } })
                            @Html.ValidationMessageFor(model => model.MatKhauCu, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group" style="padding: 2%; margin-bottom: 0px;">
                            <label class="small mb-1" for="inputLastName"><h6>Mật khẩu mới</h6> </label>
                            @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Nhập mật khẩu mới", onKeyUp = "checkPasswordStrength()" } })
                            @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                            <div id="password-strength-status"></div>
                        </div>

                        <div class="form-group" style="padding: 2%; margin-bottom: 0px;">
                            <label class="small mb-1" for="inputEmailAddress"><h6>Nhập lại mật khẩu mới</h6></label>
                            @Html.EditorFor(model => model.NhapLaiMatKhau, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Nhập lại mật khẩu mới", onKeyUp = "confirmpassword()" } })
                            @Html.ValidationMessageFor(model => model.NhapLaiMatKhau, "", new { @class = "text-danger" })
                            <span id='message'></span>
                        </div>

                        <div class="form-group" style="padding-right:3%;text-align: right;">
                            <input style="margin-bottom: 3%;border-radius: 10px;" type="submit" value="Cập nhật" class="btn btn-primary pull-right" id="ChangePassword" />
                        </div>

                    }
                    @if (@ViewBag.Message != null)
                    {
                        @Html.Raw(ViewBag.Message)
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    function checkPasswordStrength() {
        var number = /([0-9])/;
        var alphabets = /([a-zA-Z])/;
        var special_characters = /([~,!,@@,#,$,%,^,&,*,-,_,+,=,?,>,<])/;
        if ($('#MatKhau').val().length < 6) {
            $('#password-strength-status').removeClass();
            $('#password-strength-status').addClass('weak-password');
            $('#password-strength-status').html("Yếu (Mật khẩu nên có ít nhất 6 ký tự.)");
            return false;
        } else {
            if ($('#MatKhau').val().match(number) && $('#MatKhau').val().match(alphabets) && $('#MatKhau').val().match(special_characters)) {
                $('#password-strength-status').removeClass();
                $('#password-strength-status').addClass('strong-password');
                $('#password-strength-status').html("Tốt");
                return true;
            } else {
                $('#password-strength-status').removeClass();
                $('#password-strength-status').addClass('medium-password');
                $('#password-strength-status').html("Trung bình (Mật khẩu nên có ký tự số, ký tự đặc biệt, chữ cái hoa, thường.)");
                return true;
            }
        }

    }
    function confirmpassword() {
        $('#password-strength-status').remove();
        return true;
    }
    $("#ChangePassword").on('click', function () {
        if (!checkPasswordStrength()) {
            alert("Mật khẩu mới chưa tốt")
            return false;
        } else if (!confirmpassword()) {
            alert("Xác nhận mật khẩu mới chưa đúng");
            return false;
        } else { return true; }
    });
</script>

